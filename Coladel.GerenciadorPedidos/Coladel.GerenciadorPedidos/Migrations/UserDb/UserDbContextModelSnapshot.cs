// <auto-generated />
using System;
using Coladel.GerenciadorPedidos.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Coladel.GerenciadorPedidos.Migrations.UserDb
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Configuracoes", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<bool>("EnviarEmailLogistica")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enviar_logistica");

                    b.Property<bool>("EnviarEmailTransportadora")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enviar_transportadora");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<bool>("MostrarComissaoDashboard")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mostrar_comissao");

                    b.HasKey("Id");

                    b.ToTable("configuracoes");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Contato", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(14)")
                        .HasColumnName("celular");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(126)")
                        .HasColumnName("email");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("contatos");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Email", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<short>("IdCliente")
                        .HasColumnType("smallint")
                        .HasColumnName("id_cliente");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("emails");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Empresa", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<short>("IdConfiguracao")
                        .HasColumnType("smallint")
                        .HasColumnName("id_configuracao");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(256)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("IdConfiguracao")
                        .IsUnique();

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Endereco", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(26)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(26)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(126)")
                        .HasColumnName("complemento");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(2)")
                        .HasColumnName("estado");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(126)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(5)")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.EnvioEmail", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("Assunto")
                        .HasColumnType("longtext")
                        .HasColumnName("assunto");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<short>("IdEmpresa")
                        .HasColumnType("smallint")
                        .HasColumnName("id_empresa");

                    b.Property<bool>("IsOrigem")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_origem");

                    b.Property<string>("Mensagem")
                        .HasColumnType("longtext")
                        .HasColumnName("mensagem");

                    b.Property<int>("PortSmtp")
                        .HasColumnType("int")
                        .HasColumnName("port");

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("senha");

                    b.Property<string>("SmtpCliente")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("smtp_cliente");

                    b.Property<int>("TipoEmail")
                        .HasColumnType("int")
                        .HasColumnName("tipo_email");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("envio_emails");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Telefone", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<short?>("ClienteId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Transportadora", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("CodTransportadora")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_transportadora");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<short?>("IdContato")
                        .HasColumnType("smallint")
                        .HasColumnName("id_contato");

                    b.Property<short?>("IdEndereco")
                        .HasColumnType("smallint")
                        .HasColumnName("id_endereco");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(126)")
                        .HasColumnName("nome");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(126)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(256)")
                        .HasColumnName("observacao");

                    b.Property<string>("Website")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("website");

                    b.HasKey("Id");

                    b.HasIndex("IdContato")
                        .IsUnique();

                    b.HasIndex("IdEndereco")
                        .IsUnique();

                    b.ToTable("transportadoras");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.Cliente", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("varchar(256)")
                        .HasColumnName("nome_cliente");

                    b.HasKey("Id");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.ItensPedido", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<short>("IdPedido")
                        .HasColumnType("smallint")
                        .HasColumnName("id_pedido");

                    b.Property<short>("IdProduto")
                        .HasColumnType("smallint")
                        .HasColumnName("id_produto");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("preco");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProduto");

                    b.ToTable("itens_pedido");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.Pedido", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<short>("IdCliente")
                        .HasColumnType("smallint")
                        .HasColumnName("id_cliente");

                    b.Property<string>("NF")
                        .HasColumnType("longtext")
                        .HasColumnName("nf");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext")
                        .HasColumnName("observacoes");

                    b.Property<int>("StatusPedido")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total");

                    b.Property<decimal>("TotalComissao")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total_comissao");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.Produto", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("longtext")
                        .HasColumnName("nome_produto");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(2,2)")
                        .HasColumnName("preco");

                    b.HasKey("Id");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Email", b =>
                {
                    b.HasOne("Coladel.GerenciadorPedidos.Domain.Entidades.Cliente", "Cliente")
                        .WithMany("Emails")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Empresa", b =>
                {
                    b.HasOne("Coladel.GerenciadorAulas.Domain.Entidades.Configuracoes", "Configuracoes")
                        .WithOne("Empresa")
                        .HasForeignKey("Coladel.GerenciadorAulas.Domain.Entidades.Empresa", "IdConfiguracao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuracoes");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.EnvioEmail", b =>
                {
                    b.HasOne("Coladel.GerenciadorAulas.Domain.Entidades.Empresa", "Empresa")
                        .WithMany("EnvioEmails")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Telefone", b =>
                {
                    b.HasOne("Coladel.GerenciadorPedidos.Domain.Entidades.Cliente", null)
                        .WithMany("Telefones")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Transportadora", b =>
                {
                    b.HasOne("Coladel.GerenciadorAulas.Domain.Entidades.Contato", "Contato")
                        .WithOne("Transportadora")
                        .HasForeignKey("Coladel.GerenciadorAulas.Domain.Entidades.Transportadora", "IdContato");

                    b.HasOne("Coladel.GerenciadorAulas.Domain.Entidades.Endereco", "Endereco")
                        .WithOne("Transportadora")
                        .HasForeignKey("Coladel.GerenciadorAulas.Domain.Entidades.Transportadora", "IdEndereco");

                    b.Navigation("Contato");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.ItensPedido", b =>
                {
                    b.HasOne("Coladel.GerenciadorPedidos.Domain.Entidades.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coladel.GerenciadorPedidos.Domain.Entidades.Produto", "Produto")
                        .WithMany("ItensPedido")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.Pedido", b =>
                {
                    b.HasOne("Coladel.GerenciadorPedidos.Domain.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Configuracoes", b =>
                {
                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Contato", b =>
                {
                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Empresa", b =>
                {
                    b.Navigation("EnvioEmails");
                });

            modelBuilder.Entity("Coladel.GerenciadorAulas.Domain.Entidades.Endereco", b =>
                {
                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.Cliente", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("Coladel.GerenciadorPedidos.Domain.Entidades.Produto", b =>
                {
                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
